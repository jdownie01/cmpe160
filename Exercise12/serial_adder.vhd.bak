library ieee;
use ieee.std_logic_1164.all;

entity shiftreg is
port(
 Clk,Clr, SL, SR, S1, S0	: in std_logic;
 P					: in std_logic_vector(3 downto 0);
 Q					: out std_logic_vector(3 downto 0));
end shiftreg;

architecture behavioral of shiftreg is
    begin
	variable temp: std_logic_vector(3 downto 0); 
   	if Clr = '0' then
		wait until rising_edge (Clk);
   		Output <= "0000" after 22ns;
   	elsif (S1 = '1' and S0 = '0' and Clr='1') then
   		wait until rising_edge (Clk);
   		temp := P;
   		for i in 0 to 2 loop
   			temp(i) := temp(i+1);
   		end loop;
   		temp(3) := SL;
   		Output <= temp after 22ns;
   	elsif (S1 = '0' and S0 = '1' and Clr='1') then
   		wait until rising_edge (Clk);
   		temp := P;
   		for i in 0 to 2 loop
   			temp(i) := temp(i+1);
   		end loop;
   		temp(3) := SR;
   		Output <= temp after 22ns;
   	elsif (S1 = '1' and S0 = '1' and Clr='1') then
   		wait until rising_edge (Clk);
   		temp := P;
   		Output <= temp after 22ns;
   	else
   		--do nothing
   	end if;
end process;
end behavioral;
